type Query {
    users: [User]
    user(id: ID!): User
}

type Mutation {
    createUser(username: String!, email: String!, password: String!): User
    updateUser(id: ID!, username: String, email: String, password: String): User
    deleteUser(id: ID!): Boolean
}

type User {
    id: ID!
    username: String!
    email: String!
    password: String!
    totpSecret: String
    isTwoFaEnabled: Boolean!
    isEmailVerified: Boolean!
    roles: [Role]
    providers: [OAuthProvider]
}

type Role {
    id: ID!
    name: String!
}

type OAuthProvider {
    id: ID!
    provider: String!
    sub: String!
    user: User
}
